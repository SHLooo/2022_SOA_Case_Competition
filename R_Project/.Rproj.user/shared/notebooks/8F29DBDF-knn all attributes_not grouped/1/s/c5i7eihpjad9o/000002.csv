"0","for(k in 5:15) {"
"0","A = 0"
"0","for (i in 1:50) {"
"0",""
"0","#set.seed(123)"
"0","#Generate a random number that is 90% of the total number of rows in dataset."
"0","ran <- sample(1:nrow(Tourn.JoinedTable), 0.8 * nrow(Tourn.JoinedTable))"
"0",""
"0","#the normalization function is created"
"0","norm <-function(x) { "
"0","  upper = quantile(x, .98)"
"0","  lower = quantile(x, .02)"
"0","  x_norm <- (x-lower)/(upper-lower)"
"0","  x_norm[which(x_norm > 1)] = 1"
"0","  x_norm[which(x_norm < 0)] = 0"
"0","  x_norm"
"0","}"
"0",""
"0","playerIndex <- which(colnames(Tourn.JoinedTable) == ""Player"")"
"0","rankIndex <- which(colnames(Tourn.JoinedTable) == ""nation rank"")"
"0","yearIndex <- which(colnames(Tourn.JoinedTable) == ""Year"")"
"0","Tourn_norm <- as.data.frame(lapply(Tourn.JoinedTable[,-c(playerIndex,rankIndex,yearIndex)], norm))"
"0",""
"0","Tourn_train <- Tourn_norm[ran,] "
"0","Tourn_test <- Tourn_norm[-ran,] "
"0",""
"0","Tourn_target_category <- as.data.frame(Tourn.JoinedTable)[ran,rankIndex]"
"0","Tourn_test_category <- as.data.frame(Tourn.JoinedTable)[-ran,rankIndex]"
"0",""
"0","library(class)"
"0","#run knn function"
"0","#k <- 5"
"0","error <- 9"
"0","pr <- knn(Tourn_train, Tourn_test, cl=Tourn_target_category, k=k,use.all = TRUE)"
"0","accuracy <- sum(abs(as.numeric(pr) - as.numeric(Tourn_test_category)) <= error) / length(pr)"
"0","A = A + accuracy"
"0","#accuracy"
"0","}"
"0","print(paste(k, A/50))"
"0","}"
"1","[1]"
"1"," ""5 0.707096774193548"""
"1","
"
"1","[1]"
"1"," ""6 0.690967741935484"""
"1","
"
"1","[1]"
"1"," ""7 0.680645161290323"""
"1","
"
"1","[1]"
"1"," ""8 0.66752688172043"""
"1","
"
"1","[1]"
"1"," ""9 0.671182795698925"""
"1","
"
"1","[1]"
"1"," ""10 0.656774193548387"""
"1","
"
"1","[1]"
"1"," ""11 0.651612903225807"""
"1","
"
"1","[1]"
"1"," ""12 0.663010752688172"""
"1","
"
"1","[1]"
"1"," ""13 0.669032258064516"""
"1","
"
"1","[1]"
"1"," ""14 0.67505376344086"""
"1","
"
"1","[1]"
"1"," ""15 0.681290322580645"""
"1","
"

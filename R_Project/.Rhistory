points(0, 0.3636129-0.07, col = "red", pch = 19, cex = 0.8)
#text(0, 0.3636129-0.07, col = "black", pch = 19, cex = 0.8, label = "0.36")
points(-0.669848115+0.31, 0, col = "red", pch = 19, cex = 0.8)
points(0, -0.6950813+0.19, col = "red", pch = 19, cex = 0.8)
points(0.6776368-0.34, 0, col = "red", pch = 19, cex = 0.8)
indicators = data.frame(
"Gper90" = c(0.371349003, 0.367688, 0.371484),
"Total Cmp%" = c(0.721772337,	0.685312,	0.654018),
"TklW%" = c(0.722205748,	0.711882,	0.698599),
"save %" = c(0.774345785, 0.679160008, 0.679160008),
row.names = c("Team.Rarita", "2020 Champion", "2021 Champion"))
#, "Player Average"
max_min <- data.frame(
"Gper90" = c(0.375, 0.362),
"Total Cmp%" = c(0.75, 0.65),
"TklW%" = c(0.75, 0.66),
"save %" = c(0.8, 0.65),
row.names = c("Max", "Min")
)
par(mar=rep(0.2,4))
#png(file="radarplot.png")
color <- c( "light blue", "yellow", "pink", "red")
radarchart(rbind(max_min, indicators),
vlabels = c("Average Goal\n per 90 Minutes", "Pass Completion\n Percentage", "Sucessful Tackle\n Percentage", "Shot Saves\n Percentage"),
vlcex = 0.8,
plwd = 2,
plty = 1,
cglty = 1,
cglwd = 0.7,
pcol = color,
pfcol = scales::alpha(c(color[-4], NULL), 0.6),
cglcol = "dark grey"
)
legend("bottomright", col = color, lty = c(1,1,1,0), pch = c(NULL, 0, 0, 19), cex = 1, box.lty = 0, legend = c("Team Rarita", "2020 Champion", "2021 Champion", "70 percentile"))
points(0, 0.3636129-0.07, col = "red", pch = 19, cex = 0.8)
#text(0, 0.3636129-0.07, col = "black", pch = 19, cex = 0.8, label = "0.36")
points(-0.669848115+0.31, 0, col = "red", pch = 19, cex = 0.8)
points(0, -0.6950813+0.19, col = "red", pch = 19, cex = 0.8)
points(0.6776368-0.34, 0, col = "red", pch = 19, cex = 0.8)
indicators = data.frame(
"Gper90" = c(0.371349003, 0.367688, 0.371484),
"Total Cmp%" = c(0.721772337,	0.685312,	0.654018),
"TklW%" = c(0.722205748,	0.711882,	0.698599),
"save %" = c(0.774345785, 0.679160008, 0.679160008),
row.names = c("Team.Rarita", "2020 Champion", "2021 Champion"))
#, "Player Average"
max_min <- data.frame(
"Gper90" = c(0.375, 0.362),
"Total Cmp%" = c(0.75, 0.65),
"TklW%" = c(0.75, 0.66),
"save %" = c(0.8, 0.65),
row.names = c("Max", "Min")
)
par(mar=rep(0.2,4))
#png(file="radarplot.png")
color <- c( "light blue", "yellow", "pink", "red")
radarchart(rbind(max_min, indicators),
vlabels = c("Average Goal\n per 90 Minutes", "Pass Completion\n Percentage", "Sucessful Tackle\n Percentage", "Shot Saves\n Percentage"),
vlcex = 0.8,
plwd = 2,
plty = 1,
cglty = 1,
cglwd = 0.7,
pcol = color,
pfcol = scales::alpha(c(color[-4], NULL), 0.6),
cglcol = "dark grey"
)
legend("bottomright", col = color, lty = c(1,1,1,0), pch = c(0, 0, 0, 19), cex = 1, box.lty = 0, legend = c("Team Rarita", "2020 Champion", "2021 Champion", "70 percentile"))
points(0, 0.3636129-0.07, col = "red", pch = 19, cex = 0.8)
#text(0, 0.3636129-0.07, col = "black", pch = 19, cex = 0.8, label = "0.36")
points(-0.669848115+0.31, 0, col = "red", pch = 19, cex = 0.8)
points(0, -0.6950813+0.19, col = "red", pch = 19, cex = 0.8)
points(0.6776368-0.34, 0, col = "red", pch = 19, cex = 0.8)
indicators = data.frame(
"Gper90" = c(0.371349003, 0.367688, 0.371484),
"Total Cmp%" = c(0.721772337,	0.685312,	0.654018),
"TklW%" = c(0.722205748,	0.711882,	0.698599),
"save %" = c(0.774345785, 0.679160008, 0.679160008),
row.names = c("Team.Rarita", "2020 Champion", "2021 Champion"))
#, "Player Average"
max_min <- data.frame(
"Gper90" = c(0.375, 0.362),
"Total Cmp%" = c(0.75, 0.65),
"TklW%" = c(0.75, 0.66),
"save %" = c(0.8, 0.65),
row.names = c("Max", "Min")
)
par(mar=rep(0.2,4))
#png(file="radarplot.png")
color <- c( "light blue", "yellow", "pink", "red")
radarchart(rbind(max_min, indicators),
vlabels = c("Average Goal\n per 90 Minutes", "Pass Completion\n Percentage", "Sucessful Tackle\n Percentage", "Shot Saves\n Percentage"),
vlcex = 0.8,
plwd = 2,
plty = 1,
cglty = 1,
cglwd = 0.7,
pcol = color,
pfcol = scales::alpha(c(color[-4], NULL), 0.6),
cglcol = "dark grey"
)
legend("bottomright", col = color, lty = c(1,1,1,0), pch = c(, 0, 0, 19), cex = 1, box.lty = 0, legend = c("Team Rarita", "2020 Champion", "2021 Champion", "70 percentile"))
indicators = data.frame(
"Gper90" = c(0.371349003, 0.367688, 0.371484),
"Total Cmp%" = c(0.721772337,	0.685312,	0.654018),
"TklW%" = c(0.722205748,	0.711882,	0.698599),
"save %" = c(0.774345785, 0.679160008, 0.679160008),
row.names = c("Team.Rarita", "2020 Champion", "2021 Champion"))
#, "Player Average"
max_min <- data.frame(
"Gper90" = c(0.375, 0.362),
"Total Cmp%" = c(0.75, 0.65),
"TklW%" = c(0.75, 0.66),
"save %" = c(0.8, 0.65),
row.names = c("Max", "Min")
)
par(mar=rep(0.2,4))
#png(file="radarplot.png")
color <- c( "light blue", "yellow", "pink", "red")
radarchart(rbind(max_min, indicators),
vlabels = c("Average Goal\n per 90 Minutes", "Pass Completion\n Percentage", "Sucessful Tackle\n Percentage", "Shot Saves\n Percentage"),
vlcex = 0.8,
plwd = 2,
plty = 1,
cglty = 1,
cglwd = 0.7,
pcol = color,
pfcol = scales::alpha(c(color[-4], NULL), 0.6),
cglcol = "dark grey"
)
legend("bottomright", col = color, lty = c(1,1,1,0), pch = c( 19), cex = 1, box.lty = 0, legend = c("Team Rarita", "2020 Champion", "2021 Champion", "70 percentile"))
points(0, 0.3636129-0.07, col = "red", pch = 19, cex = 0.8)
#text(0, 0.3636129-0.07, col = "black", pch = 19, cex = 0.8, label = "0.36")
points(-0.669848115+0.31, 0, col = "red", pch = 19, cex = 0.8)
points(0, -0.6950813+0.19, col = "red", pch = 19, cex = 0.8)
points(0.6776368-0.34, 0, col = "red", pch = 19, cex = 0.8)
indicators = data.frame(
"Gper90" = c(0.371349003, 0.367688, 0.371484),
"Total Cmp%" = c(0.721772337,	0.685312,	0.654018),
"TklW%" = c(0.722205748,	0.711882,	0.698599),
"save %" = c(0.774345785, 0.679160008, 0.679160008),
row.names = c("Team.Rarita", "2020 Champion", "2021 Champion"))
#, "Player Average"
max_min <- data.frame(
"Gper90" = c(0.375, 0.362),
"Total Cmp%" = c(0.75, 0.65),
"TklW%" = c(0.75, 0.66),
"save %" = c(0.8, 0.65),
row.names = c("Max", "Min")
)
par(mar=rep(0.2,4))
#png(file="radarplot.png")
color <- c( "light blue", "yellow", "pink", "red")
radarchart(rbind(max_min, indicators),
vlabels = c("Average Goal\n per 90 Minutes", "Pass Completion\n Percentage", "Sucessful Tackle\n Percentage", "Shot Saves\n Percentage"),
vlcex = 0.8,
plwd = 2,
plty = 1,
cglty = 1,
cglwd = 0.7,
pcol = color,
pfcol = scales::alpha(c(color[-4], NULL), 0.6),
cglcol = "dark grey"
)
legend("bottomright", col = color, lty = c(1,1,1,0), pch = c(NA,NA,NA,19), cex = 1, box.lty = 0, legend = c("Team Rarita", "2020 Champion", "2021 Champion", "70 percentile"))
points(0, 0.3636129-0.07, col = "red", pch = 19, cex = 0.8)
#text(0, 0.3636129-0.07, col = "black", pch = 19, cex = 0.8, label = "0.36")
points(-0.669848115+0.31, 0, col = "red", pch = 19, cex = 0.8)
points(0, -0.6950813+0.19, col = "red", pch = 19, cex = 0.8)
points(0.6776368-0.34, 0, col = "red", pch = 19, cex = 0.8)
indicators = data.frame(
"Gper90" = c(0.371349003, 0.367688, 0.371484),
"Total Cmp%" = c(0.721772337,	0.685312,	0.654018),
"TklW%" = c(0.722205748,	0.711882,	0.698599),
"save %" = c(0.774345785, 0.679160008, 0.679160008),
row.names = c("Team.Rarita", "2020 Champion", "2021 Champion"))
#, "Player Average"
max_min <- data.frame(
"Gper90" = c(0.375, 0.362),
"Total Cmp%" = c(0.75, 0.65),
"TklW%" = c(0.75, 0.66),
"save %" = c(0.8, 0.65),
row.names = c("Max", "Min")
)
par(mar=rep(0.2,4))
#png(file="radarplot.png")
color <- c( "light blue", "yellow", "pink", "red")
radarchart(rbind(max_min, indicators),
vlabels = c("Average Goal\n per 90 Minutes", "Pass Completion\n Percentage", "Sucessful Tackle\n Percentage", "Shot Saves\n Percentage"),
vlcex = 0.8,
plwd = 2,
plty = 1,
cglty = 1,
cglwd = 0.7,
pcol = color,
pfcol = scales::alpha(c(color[-4], NULL), 0.6),
cglcol = "dark grey"
)
legend("bottomright", col = color, lty = c(1,1,1,0), pch = c(NA,NA,NA,19), cex = 1, box.lty = 0, legend = c("Team Rarita", "2020 Champion", "2021 Champion", "70 percentile"))
points(0, 0.3636129-0.07, col = "red", pch = 19, cex = 0.7)
#text(0, 0.3636129-0.07, col = "black", pch = 19, cex = 0.8, label = "0.36")
points(-0.669848115+0.31, 0, col = "red", pch = 19, cex = 0.7)
points(0, -0.6950813+0.19, col = "red", pch = 19, cex = 0.7)
points(0.6776368-0.34, 0, col = "red", pch = 19, cex = 0.7)
indicators = data.frame(
"Gper90" = c(0.371349003, 0.367688, 0.371484),
"Total Cmp%" = c(0.721772337,	0.685312,	0.654018),
"TklW%" = c(0.722205748,	0.711882,	0.698599),
"save %" = c(0.774345785, 0.679160008, 0.679160008),
row.names = c("Team.Rarita", "2020 Champion", "2021 Champion"))
#, "Player Average"
max_min <- data.frame(
"Gper90" = c(0.375, 0.362),
"Total Cmp%" = c(0.75, 0.65),
"TklW%" = c(0.75, 0.66),
"save %" = c(0.8, 0.65),
row.names = c("Max", "Min")
)
par(mar=rep(0.2,4))
#png(file="radarplot.png")
color <- c( "light blue", "yellow", "pink", "red")
radarchart(rbind(max_min, indicators),
vlabels = c("Average Goal\n per 90 Minutes", "Pass Completion\n Percentage", "Sucessful Tackle\n Percentage", "Shot Saves\n Percentage"),
vlcex = 0.8,
plwd = 2,
plty = 1,
cglty = 1,
cglwd = 0.7,
pcol = color,
pfcol = scales::alpha(c(color[-4], NULL), 0.6),
cglcol = "dark grey"
)
legend("bottomright", col = color, lty = c(1,1,1,0), lwd = 2, pch = c(NA,NA,NA,19), cex = 1, box.lty = 0, legend = c("Team Rarita", "2020 Champion", "2021 Champion", "70 percentile"))
points(0, 0.3636129-0.07, col = "red", pch = 19, cex = 0.7)
#text(0, 0.3636129-0.07, col = "black", pch = 19, cex = 0.8, label = "0.36")
points(-0.669848115+0.31, 0, col = "red", pch = 19, cex = 0.7)
points(0, -0.6950813+0.19, col = "red", pch = 19, cex = 0.7)
points(0.6776368-0.34, 0, col = "red", pch = 19, cex = 0.7)
indicators = data.frame(
"Gper90" = c(0.371349003, 0.367688, 0.371484),
"Total Cmp%" = c(0.721772337,	0.685312,	0.654018),
"TklW%" = c(0.722205748,	0.711882,	0.698599),
"save %" = c(0.774345785, 0.679160008, 0.679160008),
row.names = c("Team.Rarita", "2020 Champion", "2021 Champion"))
#, "Player Average"
max_min <- data.frame(
"Gper90" = c(0.375, 0.362),
"Total Cmp%" = c(0.75, 0.65),
"TklW%" = c(0.75, 0.66),
"save %" = c(0.8, 0.65),
row.names = c("Max", "Min")
)
par(mar=rep(0.2,4))
#png(file="radarplot.png")
color <- c( "light blue", "yellow", "pink", "red")
radarchart(rbind(max_min, indicators),
vlabels = c("Average Goal\n per 90 Minutes", "Pass Completion\n Percentage", "Sucessful Tackle\n Percentage", "Shot Saves\n Percentage"),
vlcex = 0.8,
plwd = 2,
plty = 1,
cglty = 1,
cglwd = 0.7,
pcol = color,
pfcol = scales::alpha(c(color[-4], NULL), 0.6),
cglcol = "dark grey"
)
legend("bottomright", col = color, lty = c(1,1,1,0), lwd = 2, pch = c(NA,NA,NA,19), cex = 1, box.lty = 0, legend = c("Team Rarita", "2020 Champion", "2021 Champion", "70 percentile"))
points(0, 0.3636129-0.07, col = "red", pch = 19, cex = 0.7)
#text(0, 0.3636129-0.07, col = "black", pch = 19, cex = 0.8, label = "0.36")
points(-0.669848115+0.31, 0, col = "red", pch = 19, cex = 0.7)
points(0, -0.6950813+0.19, col = "red", pch = 19, cex = 0.7)
points(0.6776368-0.34, 0, col = "red", pch = 19, cex = 0.7)
indicators = data.frame(
"Gper90" = c(0.371349003, 0.367688, 0.371484),
"Total Cmp%" = c(0.721772337,	0.685312,	0.654018),
"TklW%" = c(0.722205748,	0.711882,	0.698599),
"save %" = c(0.774345785, 0.679160008, 0.679160008),
row.names = c("Team.Rarita", "2020 Champion", "2021 Champion"))
#, "Player Average"
max_min <- data.frame(
"Gper90" = c(0.375, 0.362),
"Total Cmp%" = c(0.75, 0.65),
"TklW%" = c(0.75, 0.66),
"save %" = c(0.8, 0.65),
row.names = c("Max", "Min")
)
par(mar=rep(0.2,4))
#png(file="radarplot.png")
color <- c( "light blue", "yellow", "pink", "red")
radarchart(rbind(max_min, indicators),
vlabels = c("Average Goal\n per 90 Minutes", "Pass Completion\n Percentage", "Sucessful Tackle\n Percentage", "Shot Saves\n Percentage"),
vlcex = 0.8,
plwd = 2,
plty = 1,
cglty = 1,
cglwd = 0.7,
pcol = color,
pfcol = scales::alpha(c(color[-4], NULL), 0.6),
cglcol = "dark grey"
)
legend("bottomright", col = color, lty = c(1,1,1,0), lwd = 2, pch = c(NA,NA,NA,19), cex = 1.2, box.lty = 0, legend = c("Team Rarita", "2020 Champion", "2021 Champion", "70 percentile"))
points(0, 0.3636129-0.07, col = "red", pch = 19, cex = 0.7)
#text(0, 0.3636129-0.07, col = "black", pch = 19, cex = 0.8, label = "0.36")
points(-0.669848115+0.31, 0, col = "red", pch = 19, cex = 0.7)
points(0, -0.6950813+0.19, col = "red", pch = 19, cex = 0.7)
points(0.6776368-0.34, 0, col = "red", pch = 19, cex = 0.7)
indicators = data.frame(
"Gper90" = c(0.371349003, 0.367688, 0.371484),
"Total Cmp%" = c(0.721772337,	0.685312,	0.654018),
"TklW%" = c(0.722205748,	0.711882,	0.698599),
"save %" = c(0.774345785, 0.679160008, 0.679160008),
row.names = c("Team.Rarita", "2020 Champion", "2021 Champion"))
#, "Player Average"
max_min <- data.frame(
"Gper90" = c(0.375, 0.362),
"Total Cmp%" = c(0.75, 0.65),
"TklW%" = c(0.75, 0.66),
"save %" = c(0.8, 0.65),
row.names = c("Max", "Min")
)
par(mar=rep(0.2,4))
#png(file="radarplot.png")
color <- c( "light blue", "yellow", "pink", "red")
radarchart(rbind(max_min, indicators),
vlabels = c("Average Goal\n per 90 Minutes", "Pass Completion\n Percentage", "Sucessful Tackle\n Percentage", "Shot Saves\n Percentage"),
vlcex = 0.8,
plwd = 2,
plty = 1,
cglty = 1,
cglwd = 0.7,
pcol = color,
pfcol = scales::alpha(c(color[-4], NULL), 0.6),
cglcol = "dark grey"
)
legend("bottomright", col = color, lty = c(1,1,1,0), lwd = 2, pch = c(NA,NA,NA,19), cex = 1, box.lty = 0, legend = c("Team Rarita", "2020 Champion", "2021 Champion", "70 percentile"))
points(0, 0.3636129-0.07, col = "red", pch = 19, cex = 0.7)
#text(0, 0.3636129-0.07, col = "black", pch = 19, cex = 0.8, label = "0.36")
points(-0.669848115+0.31, 0, col = "red", pch = 19, cex = 0.7)
points(0, -0.6950813+0.19, col = "red", pch = 19, cex = 0.7)
points(0.6776368-0.34, 0, col = "red", pch = 19, cex = 0.7)
par(mfrow = c(1,2))
hist(A+0.001, breaks = 25, probability = T, xlab = "probability of ranked top 10", main = "Histogram of the Probability of Ranked Top 10", sub = "Figure 2.3 Histogram of the Probability of Reaching Top 10")
library(readxl)
library(dplyr)
file_path <- "/Users/liushuhao/Desktop/SOA Case Competitoin/data/2022-student-research-case-study-player-data_modified.xlsx"
#read in tables
LeagueShoot <- read_excel(file_path, sheet = "League Shooting", skip = 11,col_names =T, na = "N/A")
LeaguePass <- read_excel(file_path, sheet = "League Passing", skip = 11,col_names =T)
LeagueDefense <- read_excel(file_path, sheet = "League Defense", skip = 11,col_names =T, na = "N/A")
TournShoot <- read_excel(file_path, sheet = "Tournament Shooting", skip = 11,col_names =T, na = "N/A")
TournPass <- read_excel(file_path, sheet = "Tournament Passing", skip = 11,col_names =T)
TournDefense <- read_excel(file_path, sheet = "Tournament Defense", skip = 11,col_names =T, na = "N/A")
tables <- list("LeagueShoot" = LeagueShoot, "LeaguePass" = LeaguePass, "LeagueDefense" = LeagueDefense, "TournShoot" = TournShoot, "TournPass" = TournPass, "TournDefense" = TournDefense)
LDefense.NAattributes <- c(2, 3, 4, 6, 31, 32)
TDefense.NAattributes <- c(2, 3, 5, 30, 31)
LeagueDefense.data <- LeagueDefense[which(LeagueDefense$Pos != "GK"), -LDefense.NAattributes]
TournDefense.data <- TournDefense[which(TournDefense$Pos != "GK"), -TDefense.NAattributes]
for(attribute in 1:ncol(LeagueDefense.data)){
if(sum(is.na(LeagueDefense.data[,attribute]))) {
# find out the columns with missing values
print(paste(sum(is.na(LeagueDefense.data[,attribute])), "missing values in League Defense.", attribute))
# fill the missing values with 0
LeagueDefense.data[is.na(LeagueDefense.data[, attribute]), attribute] <- 0
}
}
for(attribute in 1:ncol(TournDefense.data)){
if(sum(is.na(TournDefense.data[,attribute]))) {
# find out the columns with missing values
print(paste(sum(is.na(TournDefense.data[,attribute])), "missing values in Tournament Defense.", attribute))
# fill the missing values with 0
TournDefense.data[is.na(TournDefense.data[, attribute]), attribute] <- 0
}
}
# Use the average value for each attribute
LeagueDefense.groupByPlayer <- LeagueDefense.data %>%
group_by(Player) %>%
summarise_all(mean)
TournDefense.groupByPlayer <- TournDefense.data %>%
group_by(Player) %>%
summarise_all(mean)
LPass.NAattributes <- c(2, 3, 4, 6, 30, 31)
TPass.NAattributes <- c(2, 3, 5, 29, 30)
LeaguePass.data <- LeaguePass[which(LeaguePass$Pos != "GK"), -LPass.NAattributes]
TournPass.data <- TournPass[which(TournPass$Pos != "GK"), -TPass.NAattributes]
# find out the columns with missing values
for(attribute in 1:ncol(LeaguePass.data)){
if(sum(is.na(LeaguePass.data[,attribute]))) {
# find out the columns with missing values
print(paste(sum(is.na(LeaguePass.data[,attribute])), "missing values in League Passing.", attribute))
# fill the missing values with 0
LeaguePass.data[is.na(LeaguePass.data[, attribute]), attribute] <- 0
}
}
for(attribute in 1:ncol(TournPass.data)){
if(sum(is.na(TournPass.data[,attribute]))) {
# find out the columns with missing values
print(paste(sum(is.na(TournPass.data[,attribute])), "missing values in Tournament Passing.", attribute))
# fill the missing values with 0
TournPass.data[is.na(TournPass.data[, attribute]), attribute] <- 0
}
}
# Use the average value for each attribute
library(dplyr)
LeaguePass.groupByPlayer <- LeaguePass.data %>%
group_by(Player) %>%
summarise_all(mean)
TournPass.groupByPlayer <- TournPass.data %>%
group_by(Player) %>%
summarise_all(mean)
LShoot.NAattributes <- c(2, 3, 4, 6, 17, 20, 21, 22, 23, 24, 25, 26)
TShoot.NAattributes <- c(2, 3, 5, 18, 19)
LeagueShoot.data <- LeagueShoot[which(LeagueShoot$Pos != "GK"), -LShoot.NAattributes]
TournShoot.data <- TournShoot[which(TournShoot$Pos != "GK"), -TShoot.NAattributes]
# find out the columns with missing values
for(attribute in 1:ncol(LeagueShoot.data)){
if(sum(is.na(LeagueShoot.data[,attribute]))) {
print(paste(sum(is.na(LeagueShoot.data[,attribute])), "missing values in League Forward.", attribute))
LeagueShoot.data[is.na(LeagueShoot.data[, attribute]), attribute] <- 0
}
}
for(attribute in 1:ncol(TournShoot.data)){
if(sum(is.na(TournShoot.data[,attribute]))) {
print(paste(sum(is.na(TournShoot.data[,attribute])), "missing values in Tournament Forward.", attribute))
TournShoot.data[is.na(TournShoot.data[, attribute]), attribute] <- 0
}
}
# Use the average value for each attribute
LeagueShoot.groupByPlayer <- LeagueShoot.data %>%
group_by(Player) %>%
summarise_all(mean)
TournShoot.groupByPlayer <- TournShoot.data %>%
group_by(Player) %>%
summarise_all(mean)
tables.gbp <- list("ls.gbp" = LeagueShoot.groupByPlayer, "ts.gbp" = TournShoot.groupByPlayer, "ld,gbp" = LeagueDefense.groupByPlayer, "td.gbp" = TournDefense.groupByPlayer, "lp.gbp" = LeaguePass.groupByPlayer, "tp.gbp" = TournPass.groupByPlayer)
League.tables <- list(LeagueShoot.groupByPlayer, LeaguePass.groupByPlayer, LeagueDefense.groupByPlayer)
Tourn.tables <- list(TournShoot.groupByPlayer, TournPass.groupByPlayer, TournDefense.groupByPlayer)
League.JoinedTable <- inner_join(inner_join(League.tables[[1]], League.tables[[2]], by="Player"), League.tables[[3]], by="Player")
Tourn.JoinedTable <- inner_join(inner_join(Tourn.tables[[1]], Tourn.tables[[2]], by="Player"), Tourn.tables[[3]], by="Player")
# find the average playing time
League.JoinedTable$"90s" <- (League.JoinedTable$"90s" + League.JoinedTable$"90s.x" + League.JoinedTable$"90s.y")/3
Tourn.JoinedTable$"90s" <- (Tourn.JoinedTable$"90s" + Tourn.JoinedTable$"90s.x" + Tourn.JoinedTable$"90s.y")/3
League.JoinedTable <- League.JoinedTable[ , !(names(League.JoinedTable) %in% c("90s.x", "90s.y"))]
Tourn.JoinedTable <- Tourn.JoinedTable[ , !(names(Tourn.JoinedTable) %in% c("90s.x", "90s.y"))]
Tourn.JoinedTable.ranked <- Tourn.JoinedTable[which(!is.na(Tourn.JoinedTable$`nation rank`)),]
nrow(League.JoinedTable)
nrow(Tourn.JoinedTable)
#the normalization function is created
norm <-function(x) {
upper = quantile(x, .98)
lower = quantile(x, .02)
x_norm <- (x-lower)/(upper-lower)
x_norm[which(x_norm > 1)] = 1
x_norm[which(x_norm < 0)] = 0
x_norm
}
playerIndex <- which(colnames(Tourn.JoinedTable.ranked) == "Player")
rankIndex <- which(colnames(Tourn.JoinedTable.ranked) == "nation rank")
Tourn_norm <- as.data.frame(lapply(Tourn.JoinedTable.ranked[,-c(playerIndex,rankIndex)], norm))
LeagePlayerIndex <- which(colnames(League.JoinedTable) == "Player")
League_norm <- as.data.frame(lapply(League.JoinedTable[,-LeagePlayerIndex], norm))
# decide how many components to use
eigenvalues <- eigen(cor(League_norm))$values
eigenvaluesProp <- cumsum(eigenvalues)/sum(eigenvalues)
par(mfrow = c(1,2), cex = 0.8)
plot(eigenvalues, main = "Eigenvalues of the Correlation Matrix", sub = "Figure 2.1 Eigenvalues of the Correlation Matrix")
plot(eigenvaluesProp, xlab = "number of components", ylab = "proportion", main = "Proportion of Variation Included", sub = "Figure 2.2 Variation explained corresponding to the number of components used in PCA")
abline(h = 0.9, lty = 2, col = "red")
abline(v = 21, lty = 21, col = "red")
points(21, eigenvaluesProp[21], pch = 19, col = "red", cex = 0.95)
text(26, 0.85, col = "red", "(21, 0.9)")
#check if the variance of different attributes are large
apply(Tourn_norm, 2, var)
plot(apply(Tourn_norm, 2, var))
# apply Principle Component Analysis
compNum <- 22
pca = prcomp(Tourn_norm, scale = T)
Tourn_norm.pca <- as.matrix(Tourn_norm) %*% as.matrix(pca$rotation[,1:compNum])
#run knn function
library(class)
k <- 18
error <- 9
A <- c()
B <- c()
C <- c()
for(i in 1:2000) {
TournRanks <- Tourn.JoinedTable.ranked$`nation rank`
pr <- knn.cv(Tourn_norm.pca,cl=TournRanks,k=k,use.all = TRUE)
accuracy9 <- sum(abs(as.numeric(pr) - as.numeric(TournRanks)) <= error) / length(pr)
accuracy0 <- sum(as.numeric(pr) == as.numeric(TournRanks)) / length(pr)
accuracy1 <- sum(abs(as.numeric(pr) - as.numeric(TournRanks)) <= 1) / length(pr)
A = c(A, accuracy9)
B <- c(B, accuracy0)
C <- c(C, accuracy1)
}
mean(A)
mean(B)
mean(C)
par(mfrow = c(1,2))
hist(A+0.001, breaks = 25, probability = T, xlab = "probability of ranked top 10", main = "Histogram of the Probability of Ranked Top 10", sub = "Figure 2.3 Histogram of the Probability of Reaching Top 10")
hist(C, breaks = 25, probability = T, xlab = "probability of ranked top 10", main = "Histogram of the Probability of Achieving Championship", sub = "Figure 2.4 Histogram of the Probability of Achieving Championship", cex = 0.8)
par(mfrow = c(1,2))
hist(A+0.001, breaks = 25, probability = T, xlab = "probability of ranked top 10", main = "Histogram of the Probability of Ranked Top 10", sub = "Figure 2.3 Histogram of the Probability of Reaching Top 10")
hist(C, breaks = 25, probability = T, xlab = "probability of ranked top 10", main = "Histogram of the Probability of Achieving Championship", sub = "Figure 2.4 Histogram of the Probability of Achieving Championship", cex = 0.1)
par(mfrow = c(1,2))
hist(A+0.001, breaks = 25, probability = T, xlab = "probability of ranked top 10", main = "Histogram of the Probability of Ranked Top 10", sub = "Figure 2.3 Histogram of the Probability of Reaching Top 10")
hist(C, breaks = 25, probability = T, xlab = "probability of ranked top 10", main = "Histogram of the Probability of Achieving Championship", sub = "Figure 2.4 Histogram of the Probability of Achieving Championship", cex.lab = 0.8)
par(mfrow = c(1,2))
hist(A+0.001, breaks = 25, probability = T, xlab = "probability of ranked top 10", main = "Histogram of the Probability of Ranked Top 10", sub = "Figure 2.3 Histogram of the Probability of Reaching Top 10")
hist(C, breaks = 25, probability = T, xlab = "probability of ranked top 10", main = "Histogram of the Probability of Achieving Championship", sub = "Figure 2.4 Histogram of the Probability of Achieving Championship", cex.lab = 0.1)
par(mfrow = c(1,2), cex = 0.8)
hist(A+0.001, breaks = 25, probability = T, xlab = "probability of ranked top 10", main = "Histogram of the Probability of Ranked Top 10", sub = "Figure 2.3 Histogram of the Probability of Reaching Top 10")
hist(C, breaks = 25, probability = T, xlab = "probability of ranked top 10", main = "Histogram of the Probability of Achieving Championship", sub = "Figure 2.4 Histogram of the Probability of Achieving Championship")
